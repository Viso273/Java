public class ByteOperator {

	//write a main function
	public static void main(String[] args){
		
		//watch the teacher's video
		//1.先找到2的补码  => 2的原码  00000000 00000000 00000000 00000010
		//	2的补码 00000000 00000000 00000000 00000010
		//2.3的补码 3的原码 00000000 00000000 00000000 00000011
		//	3的补码 00000000 00000000 00000000 00000011
		//3.按位&
		//  00000000 00000000 00000000 00000010
		//  00000000 00000000 00000000 00000011
		//  00000000 00000000 00000000 00000010  ----------补码
		//  00000000 00000000 00000000 00000010  ----------原码（正数三码合一）
		//  运算结果为2
		System.out.println(2&3);

		//推导
		//1.先得到 -2 的原码：10000000 00000000 00000000 00000010
		//2.再得到 -2 的反码：11111111 11111111 11111111 11111101
		//3.最后得 -2 的补码：11111111 11111111 11111111 11111110
		//4.再执行~-2 的操作：00000000 00000000 00000000 00000001--------补码.原码
		System.out.println(~-2);

		//推导
		//1.得到2的补码 00000000 00000000 00000000 00000010
		//2.~2的操作    11111111 11111111 11111111 11111101  运算后补码
		//3.反推反码    11111111 11111111 11111111 11111100  运算后的反码
		//4.反推原码    10000000 00000000 00000000 00000011  运算后原码
		//结果为-3
		System.out.println(~2);
	}
}